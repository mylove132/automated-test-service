import {
  Column,
  CreateDateColumn,
  Entity,
  ManyToOne, OneToMany,
  PrimaryGeneratedColumn,
  UpdateDateColumn
} from "typeorm";
import {CatalogEntity} from "../catalog/catalog.entity";
import {CaseGrade} from "../../config/base.enum";
import { CaseEntity } from "../case/case.entity";


@Entity('scene')
export class SceneEntity {

    @PrimaryGeneratedColumn()
    id: number;

    @CreateDateColumn()
    createDate: Date;

    @UpdateDateColumn()
    updateDate: Date;

    @ManyToOne(type => CatalogEntity, catalog => catalog.cases, {cascade: true,onDelete: 'CASCADE',onUpdate: 'CASCADE'})
    catalog: CatalogEntity;

    @Column()
    name: String;

    @Column({comment: "场景描述"})
    desc: string;

    @Column('enum',{default: CaseGrade.LOW, nullable: false, enum: CaseGrade, comment: '场景等级'})
    sceneGrade: CaseGrade;

    @OneToMany(type => CaseEntity, cases => cases.scene)
    cases: CaseEntity[];

}
















































































































































































































































































































































































































































































































