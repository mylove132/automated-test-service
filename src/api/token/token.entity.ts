import {
    Column,
    CreateDateColumn,
    Entity,
    ManyToOne,
    OneToMany,
    PrimaryGeneratedColumn,
    UpdateDateColumn
} from "typeorm";
import {CaseEntity} from "../case/case.entity";
import {EnvEntity} from "../env/env.entity";
import {TokenPlatform} from "./dto/token.dto";
import {ParamType} from "../case/dto/http.enum";


@Entity('token')
export class TokenEntity {

    @PrimaryGeneratedColumn()
    id: number;

    @Column({comment: "用户名称",nullable: true})
    username: string;

    @Column('enum',{default: TokenPlatform.CRM, nullable: false, enum: TokenPlatform, comment: 'token平台'})
    tokenPlatform: TokenPlatform;

    @Column({comment:"登录数据", nullable: true})
    body: string;

    @Column('text',{comment: "token",nullable: true})
    token: string;

    @Column({comment: "url"})
    url: string;

    @CreateDateColumn()
    createDate: Date;

    @UpdateDateColumn()
    updateDate: Date;

    @OneToMany(type => CaseEntity,cases => cases.token)
    cases: CaseEntity;

    @ManyToOne(type => EnvEntity, env => env.tokens,{cascade: true,onDelete: 'CASCADE',onUpdate: 'CASCADE'})
    env: EnvEntity;


}
















































































































































































































































































































































































































































































































